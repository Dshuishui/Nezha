// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.2
// source: kv.proto

package kvrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInCausalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Timestamp   int64            `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetInCausalRequest) Reset() {
	*x = GetInCausalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInCausalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInCausalRequest) ProtoMessage() {}

func (x *GetInCausalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInCausalRequest.ProtoReflect.Descriptor instead.
func (*GetInCausalRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

func (x *GetInCausalRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetInCausalRequest) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *GetInCausalRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetInCausalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string           `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Success     bool             `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *GetInCausalResponse) Reset() {
	*x = GetInCausalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInCausalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInCausalResponse) ProtoMessage() {}

func (x *GetInCausalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInCausalResponse.ProtoReflect.Descriptor instead.
func (*GetInCausalResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{1}
}

func (x *GetInCausalResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetInCausalResponse) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *GetInCausalResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PutInCausalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string           `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,3,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Timestamp   int64            `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PutInCausalRequest) Reset() {
	*x = PutInCausalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutInCausalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutInCausalRequest) ProtoMessage() {}

func (x *PutInCausalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutInCausalRequest.ProtoReflect.Descriptor instead.
func (*PutInCausalRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{2}
}

func (x *PutInCausalRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutInCausalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PutInCausalRequest) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *PutInCausalRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PutInCausalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PutInCausalResponse) Reset() {
	*x = PutInCausalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutInCausalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutInCausalResponse) ProtoMessage() {}

func (x *PutInCausalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutInCausalResponse.ProtoReflect.Descriptor instead.
func (*PutInCausalResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{3}
}

func (x *PutInCausalResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutInCausalResponse) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

type GetInWritelessCausalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Timestamp   int64            `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetInWritelessCausalRequest) Reset() {
	*x = GetInWritelessCausalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInWritelessCausalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInWritelessCausalRequest) ProtoMessage() {}

func (x *GetInWritelessCausalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInWritelessCausalRequest.ProtoReflect.Descriptor instead.
func (*GetInWritelessCausalRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{4}
}

func (x *GetInWritelessCausalRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetInWritelessCausalRequest) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *GetInWritelessCausalRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetInWritelessCausalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string           `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Success     bool             `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *GetInWritelessCausalResponse) Reset() {
	*x = GetInWritelessCausalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInWritelessCausalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInWritelessCausalResponse) ProtoMessage() {}

func (x *GetInWritelessCausalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInWritelessCausalResponse.ProtoReflect.Descriptor instead.
func (*GetInWritelessCausalResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{5}
}

func (x *GetInWritelessCausalResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetInWritelessCausalResponse) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *GetInWritelessCausalResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PutInWritelessCausalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string           `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,3,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Timestamp   int64            `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PutInWritelessCausalRequest) Reset() {
	*x = PutInWritelessCausalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutInWritelessCausalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutInWritelessCausalRequest) ProtoMessage() {}

func (x *PutInWritelessCausalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutInWritelessCausalRequest.ProtoReflect.Descriptor instead.
func (*PutInWritelessCausalRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{6}
}

func (x *PutInWritelessCausalRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutInWritelessCausalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PutInWritelessCausalRequest) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

func (x *PutInWritelessCausalRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PutInWritelessCausalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vectorclock map[string]int32 `protobuf:"bytes,2,rep,name=vectorclock,proto3" json:"vectorclock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PutInWritelessCausalResponse) Reset() {
	*x = PutInWritelessCausalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutInWritelessCausalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutInWritelessCausalResponse) ProtoMessage() {}

func (x *PutInWritelessCausalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutInWritelessCausalResponse.ProtoReflect.Descriptor instead.
func (*PutInWritelessCausalResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{7}
}

func (x *PutInWritelessCausalResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutInWritelessCausalResponse) GetVectorclock() map[string]int32 {
	if x != nil {
		return x.Vectorclock
	}
	return nil
}

var File_kv_proto protoreflect.FileDescriptor

var file_kv_proto_rawDesc = []byte{
	0x0a, 0x08, 0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x12, 0x50,
	0x75, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a,
	0x3e, 0x0a, 0x10, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xb8, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x47, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x43, 0x61,
	0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x3e, 0x0a, 0x10, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xde, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x0b,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61,
	0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x3e,
	0x0a, 0x10, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4,
	0x01, 0x0a, 0x1b, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73,
	0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x50, 0x75,
	0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x50, 0x0a, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x1a, 0x3e, 0x0a, 0x10, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xaa, 0x02, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x43, 0x61,
	0x75, 0x73, 0x61, 0x6c, 0x12, 0x13, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x75, 0x73,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x50, 0x75, 0x74, 0x49,
	0x6e, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x49,
	0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c,
	0x12, 0x1c, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73,
	0x73, 0x43, 0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43,
	0x61, 0x75, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x6b, 0x76, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_kv_proto_rawDescOnce sync.Once
	file_kv_proto_rawDescData = file_kv_proto_rawDesc
)

func file_kv_proto_rawDescGZIP() []byte {
	file_kv_proto_rawDescOnce.Do(func() {
		file_kv_proto_rawDescData = protoimpl.X.CompressGZIP(file_kv_proto_rawDescData)
	})
	return file_kv_proto_rawDescData
}

var file_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_kv_proto_goTypes = []interface{}{
	(*GetInCausalRequest)(nil),           // 0: GetInCausalRequest
	(*GetInCausalResponse)(nil),          // 1: GetInCausalResponse
	(*PutInCausalRequest)(nil),           // 2: PutInCausalRequest
	(*PutInCausalResponse)(nil),          // 3: PutInCausalResponse
	(*GetInWritelessCausalRequest)(nil),  // 4: GetInWritelessCausalRequest
	(*GetInWritelessCausalResponse)(nil), // 5: GetInWritelessCausalResponse
	(*PutInWritelessCausalRequest)(nil),  // 6: PutInWritelessCausalRequest
	(*PutInWritelessCausalResponse)(nil), // 7: PutInWritelessCausalResponse
	nil,                                  // 8: GetInCausalRequest.VectorclockEntry
	nil,                                  // 9: GetInCausalResponse.VectorclockEntry
	nil,                                  // 10: PutInCausalRequest.VectorclockEntry
	nil,                                  // 11: PutInCausalResponse.VectorclockEntry
	nil,                                  // 12: GetInWritelessCausalRequest.VectorclockEntry
	nil,                                  // 13: GetInWritelessCausalResponse.VectorclockEntry
	nil,                                  // 14: PutInWritelessCausalRequest.VectorclockEntry
	nil,                                  // 15: PutInWritelessCausalResponse.VectorclockEntry
}
var file_kv_proto_depIdxs = []int32{
	8,  // 0: GetInCausalRequest.vectorclock:type_name -> GetInCausalRequest.VectorclockEntry
	9,  // 1: GetInCausalResponse.vectorclock:type_name -> GetInCausalResponse.VectorclockEntry
	10, // 2: PutInCausalRequest.vectorclock:type_name -> PutInCausalRequest.VectorclockEntry
	11, // 3: PutInCausalResponse.vectorclock:type_name -> PutInCausalResponse.VectorclockEntry
	12, // 4: GetInWritelessCausalRequest.vectorclock:type_name -> GetInWritelessCausalRequest.VectorclockEntry
	13, // 5: GetInWritelessCausalResponse.vectorclock:type_name -> GetInWritelessCausalResponse.VectorclockEntry
	14, // 6: PutInWritelessCausalRequest.vectorclock:type_name -> PutInWritelessCausalRequest.VectorclockEntry
	15, // 7: PutInWritelessCausalResponse.vectorclock:type_name -> PutInWritelessCausalResponse.VectorclockEntry
	0,  // 8: KV.GetInCausal:input_type -> GetInCausalRequest
	2,  // 9: KV.PutInCausal:input_type -> PutInCausalRequest
	4,  // 10: KV.GetInWritelessCausal:input_type -> GetInWritelessCausalRequest
	6,  // 11: KV.PutInWritelessCausal:input_type -> PutInWritelessCausalRequest
	1,  // 12: KV.GetInCausal:output_type -> GetInCausalResponse
	3,  // 13: KV.PutInCausal:output_type -> PutInCausalResponse
	5,  // 14: KV.GetInWritelessCausal:output_type -> GetInWritelessCausalResponse
	7,  // 15: KV.PutInWritelessCausal:output_type -> PutInWritelessCausalResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_kv_proto_init() }
func file_kv_proto_init() {
	if File_kv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInCausalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInCausalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutInCausalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutInCausalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInWritelessCausalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInWritelessCausalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutInWritelessCausalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutInWritelessCausalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kv_proto_goTypes,
		DependencyIndexes: file_kv_proto_depIdxs,
		MessageInfos:      file_kv_proto_msgTypes,
	}.Build()
	File_kv_proto = out.File
	file_kv_proto_rawDesc = nil
	file_kv_proto_goTypes = nil
	file_kv_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	GetInCausal(ctx context.Context, in *GetInCausalRequest, opts ...grpc.CallOption) (*GetInCausalResponse, error)
	PutInCausal(ctx context.Context, in *PutInCausalRequest, opts ...grpc.CallOption) (*PutInCausalResponse, error)
	GetInWritelessCausal(ctx context.Context, in *GetInWritelessCausalRequest, opts ...grpc.CallOption) (*GetInWritelessCausalResponse, error)
	PutInWritelessCausal(ctx context.Context, in *PutInWritelessCausalRequest, opts ...grpc.CallOption) (*PutInWritelessCausalResponse, error)
}

type kVClient struct {
	cc grpc.ClientConnInterface
}

func NewKVClient(cc grpc.ClientConnInterface) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) GetInCausal(ctx context.Context, in *GetInCausalRequest, opts ...grpc.CallOption) (*GetInCausalResponse, error) {
	out := new(GetInCausalResponse)
	err := c.cc.Invoke(ctx, "/KV/GetInCausal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutInCausal(ctx context.Context, in *PutInCausalRequest, opts ...grpc.CallOption) (*PutInCausalResponse, error) {
	out := new(PutInCausalResponse)
	err := c.cc.Invoke(ctx, "/KV/PutInCausal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) GetInWritelessCausal(ctx context.Context, in *GetInWritelessCausalRequest, opts ...grpc.CallOption) (*GetInWritelessCausalResponse, error) {
	out := new(GetInWritelessCausalResponse)
	err := c.cc.Invoke(ctx, "/KV/GetInWritelessCausal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutInWritelessCausal(ctx context.Context, in *PutInWritelessCausalRequest, opts ...grpc.CallOption) (*PutInWritelessCausalResponse, error) {
	out := new(PutInWritelessCausalResponse)
	err := c.cc.Invoke(ctx, "/KV/PutInWritelessCausal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
// 定义了服务提供的方法以及参数、返回值类型等。这里接口定义了四个方法，表示服务端能处理客户端发送的对应的gRPC请求，并且提供了对存储系统的访问能力。
// 当客户端实现该接口并注册为gRPC服务器的一部分时，客户端可以通过相应接口调用这些方法发送请求，并且得到服务器的相应。
type KVServer interface {
	GetInCausal(context.Context, *GetInCausalRequest) (*GetInCausalResponse, error)
	PutInCausal(context.Context, *PutInCausalRequest) (*PutInCausalResponse, error)
	GetInWritelessCausal(context.Context, *GetInWritelessCausalRequest) (*GetInWritelessCausalResponse, error)
	PutInWritelessCausal(context.Context, *PutInWritelessCausalRequest) (*PutInWritelessCausalResponse, error)
}

// UnimplementedKVServer can be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (*UnimplementedKVServer) GetInCausal(context.Context, *GetInCausalRequest) (*GetInCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInCausal not implemented")
}
func (*UnimplementedKVServer) PutInCausal(context.Context, *PutInCausalRequest) (*PutInCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutInCausal not implemented")
}
func (*UnimplementedKVServer) GetInWritelessCausal(context.Context, *GetInWritelessCausalRequest) (*GetInWritelessCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInWritelessCausal not implemented")
}
func (*UnimplementedKVServer) PutInWritelessCausal(context.Context, *PutInWritelessCausalRequest) (*PutInWritelessCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutInWritelessCausal not implemented")
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	// RegisterService方法接受两个参数，第一个参数是服务描述符，用于描述服务的接口和方法
	// 第二个参数是服务实现对象，用于处理客户端的gRPC请求 
	s.RegisterService(&_KV_serviceDesc, srv)	
}

func _KV_GetInCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetInCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KV/GetInCausal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetInCausal(ctx, req.(*GetInCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutInCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutInCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutInCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KV/PutInCausal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutInCausal(ctx, req.(*PutInCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_GetInWritelessCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInWritelessCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetInWritelessCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KV/GetInWritelessCausal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetInWritelessCausal(ctx, req.(*GetInWritelessCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutInWritelessCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutInWritelessCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutInWritelessCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/KV/PutInWritelessCausal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutInWritelessCausal(ctx, req.(*PutInWritelessCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "KV",
	// 处理服务请求的处理程序类型，指定了使用KVServer类型来处理请求，
	HandlerType: (*KVServer)(nil),
	// 服务的方法描述符列表，描述了每个方法的名称和处理程序
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInCausal",
			Handler:    _KV_GetInCausal_Handler,
		},
		{
			MethodName: "PutInCausal",
			Handler:    _KV_PutInCausal_Handler,
		},
		{
			MethodName: "GetInWritelessCausal",
			Handler:    _KV_GetInWritelessCausal_Handler,
		},
		{
			MethodName: "PutInWritelessCausal",
			Handler:    _KV_PutInWritelessCausal_Handler,
		},
	},
	// 服务的流描述符列表
	Streams:  []grpc.StreamDesc{},
	// 服务的元数据，指服务定义所在的文件名称或路径
	Metadata: "kv.proto",
}
